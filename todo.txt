
VS code ympäristö


TODO:
	poista behavior kohta kokonaan
		lisää vaan gameobjektiin

    X levelin objektien lataus
    -lasten käsittely
        -parent hoitaa childin päivittämisen
        X renderer
        X update
        - Collide
        
    -toinen leveli ja levelien vaihto
        -joku scenemanager tms luokka ja hoitaa
            -load screenin avaamisen
            -vanhan levelin tuhoaminen
            -uuden luonti
            -playerin liittäminen

    -ase
        -ampumislogiikka aseen luokkaan
            -entä triggaus, pitöäiskö tämä laittaa aseen omistajalle
        X projectilen "synnytys"
        -piippusuunta
        X älä ammu joka framella
       aseen vaihto
       vihollisten aseet
        -koodin uudelleenkäyttö
    -projectile
        -alle 1p/frame nopeus?
        -collision
        
    -renderöintijärjestys
    
    
    
    -lapsiobjektit
        -scenen injektoinnille pitää keksiä toinen tapa
            -factory pattern ehkä?
            
        Pitäisikö omistus hierarkia toteuttaa esim niin että esim:
            scene
                -player
                    -armor, weapon tms
                -enemy
                jne.
            Scenessä ei siis olisi suoraan linkkia esim playerin alaisiin objekteihin

        -onko hyvä tapa toteuttaa?
        
        
    -gameobjectin luonti
        -pitäisikö liittää heti rakentajassa sceneen?
        mikä olisi paras tapa käsitellä
            -pitäisikö esim nykyinen scene laittaa globaaliksi TD2D luokkaan?
            -vai dependency injection

        
    -configin lataaminen
        -kontrollit
        
    
        
IDEOITA
    inventory
    -monimutkaisemmat colliderit
        -viiva
        -polygoni
        toteutetaan kun tarvitaan
        
PARANNUKSIA
    -onko behavior hyvä tapa toteuttaa
        kannattaisiko logiikka vain suoraan laittaa luokkaan
    -contentin lataaminen paremmin
    
    -kaiken okoaminen yhdeksi paketiksi
     erota mikä on "frameworkkia" ja mikä "testi"peliä
        -testi luokista koodia frameworkkiin jos on tarpeeksi hyvää kamaa
     siivottu versio jota on helppo uudelleenkäyttää
        -koodista vähän koherentimpaa
            -isot kirjaimet esim
            
            
            
DOKUMENTAATIO

TopDown2D

GameObject
    Represents any object 
    Collider
        Represents the area the gameobject occupies. Can be used to detect collision between objects
    Renderer
        Takes care of drawing the component on screen
        Texture
    Transform
        
        Position
        Rotation
    Behavior
        The behavior of the gameobject. The update method of all active behaviors are called in every update loop
        
        void Update()
    OnCollision(Collider)
        called when object collides with another. The collider parameter is the colliding objects collider.
    Children
        The children are drawn, updated and checked for collision recursively. The parent gameobject handles the updating and rendering of its children
        
Scene
    
Camera
    
CollisionHandler
    Handles the logic of object collision, and calls the OnCollision method of all the colliding objects.
    At the moment the algorithm is very primitive, but

  
